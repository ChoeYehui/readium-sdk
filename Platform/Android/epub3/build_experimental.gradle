apply plugin: 'com.android.model.native'

def ndk_skipX86 = (rootProject.hasProperty("readium_ndk_skipX86") && rootProject.readium_ndk_skipX86)
def ndk_skipARM = (rootProject.hasProperty("readium_ndk_skipARM") && rootProject.readium_ndk_skipARM)
def ndk_clang = (rootProject.hasProperty("readium_ndk_clang") && rootProject.readium_ndk_clang)
def ndk_debug = (rootProject.hasProperty("readium_ndk_debug") && rootProject.readium_ndk_debug)

model {
    android {
        compileSdkVersion = 24
    }

    android.sources {
        main {
            jni {
                source {
                    srcDirs = [
                            './src/main/jni',
                            './src/main/jni/jni',
                            '../../../ePub3'
                    ]

//                    includes.add('ePub/**/*.cpp')
//                    includes.add('ePub/**/*.c')

                    excludes = ['ThirdParty/**/*.*']
                    excludes.add('utilities/*.*')
                    excludes.add('xml/**/*.*')

//                    getFilter().exclude('...')
                }
                exportedHeaders {
                    srcDir "./src/main/jni"
                }
            }
        }
    }

    android.ndk {
        moduleName = "epub3"

        toolchain = ndk_clang ? "clang" : "gcc"
        stl = ndk_clang ? "c++_shared" : "gnustl_shared"

        cppFlags.addAll([
                ndk_clang ? "-std=c++11" : "-std=gnu++11",

                "-fpermissive",
                "-fexceptions",
                "-frtti",
                "-DBUILDING_EPUB3",
                ndk_clang ? "-D_LIBCPP_INLINE_VISIBILITY_EXCEPT_GCC49=_LIBCPP_INLINE_VISIBILITY" : "-DREADIUM_GCC",
                "-I../prefix.h",
                "-I${file("./include")}".toString(),
                "-I${file("./include/ePub3")}".toString(),
                "-I${file("./include/ePub3/utilities")}".toString(),
                "-I${file("./include/ePub3/xml")}".toString()
        ])
        ldLibs.addAll(['z', 'android', 'log', 'epub3', 'xml2', 'icuuc', 'icui18n', 'icuio', 'icudata'])
    }

    android.buildTypes {
        release {

        }
        debug {
            ndk.with {
                debuggable = true
            }
        }
    }

    android.productFlavors {
        create ("arm") {
            ndk.with {
                abiFilters.add("armeabi-v7a")
                ldFlags.addAll([
                        "-L${file("./obj/local/armeabi-v7a")}".toString(),
                        "-L${file("../../../ePub3/ThirdParty/icu4c/lib/armeabi-v7a")}".toString()
                ])
            }
        }

        if (!ndk_skipX86)
        create("x86") {
            ndk.with {
                abiFilters.add("x86")
                ldFlags.addAll([
                        "-L${file("./obj/local/x86")}".toString(),
                        "-L${file("../../../ePub3/ThirdParty/icu4c/lib/x86")}".toString()
                ])
            }
        }
    }
}